0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.15.1
3 info using node@v4.4.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/danding/Documents/plugins/cordova-plugin-media',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/danding/.npm/cordova-danding-media/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/danding/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/Users/danding/.npm/cordova-danding-media/1.0.0/package.tgz',
10 verbose tar pack   '/Users/danding/Documents/plugins/cordova-plugin-media' ]
11 verbose tarball /Users/danding/.npm/cordova-danding-media/1.0.0/package.tgz
12 verbose folder /Users/danding/Documents/plugins/cordova-plugin-media
13 info prepublish cordova-danding-media@1.0.0
14 verbose addLocalTarball adding from inside cache /Users/danding/.npm/cordova-danding-media/1.0.0/package.tgz
15 verbose correctMkdir /Users/danding/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd cordova-danding-media@1.0.0
17 verbose afterAdd /Users/danding/.npm/cordova-danding-media/1.0.0/package/package.json not in flight; writing
18 verbose correctMkdir /Users/danding/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /Users/danding/.npm/cordova-danding-media/1.0.0/package/package.json written
20 silly publish { name: 'cordova-danding-media',
20 silly publish   version: '1.0.0',
20 silly publish   description: '--- title: Media description: Record and play audio on the device. --- <!-- # license: Licensed to the Apache Software Foundation (ASF) under one #         or more contributor license agreements.  See the NOTICE file #         distributed with this work for additional information #         regarding copyright ownership.  The ASF licenses this file #         to you under the Apache License, Version 2.0 (the #         "License"); you may not use this file except in compliance #         with the License.  You may obtain a copy of the License at # #           http://www.apache.org/licenses/LICENSE-2.0 # #         Unless required by applicable law or agreed to in writing, #         software distributed under the License is distributed on an #         "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY #         KIND, either express or implied.  See the License for the #         specific language governing permissions and limitations #         under the License. -->',
20 silly publish   main: 'index.js',
20 silly publish   directories: { doc: 'doc', test: 'tests' },
20 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
20 silly publish   author: { name: 'danding' },
20 silly publish   license: 'ISC',
20 silly publish   readme: '---\ntitle: Media\ndescription: Record and play audio on the device.\n---\n<!--\n# license: Licensed to the Apache Software Foundation (ASF) under one\n#         or more contributor license agreements.  See the NOTICE file\n#         distributed with this work for additional information\n#         regarding copyright ownership.  The ASF licenses this file\n#         to you under the Apache License, Version 2.0 (the\n#         "License"); you may not use this file except in compliance\n#         with the License.  You may obtain a copy of the License at\n#\n#           http://www.apache.org/licenses/LICENSE-2.0\n#\n#         Unless required by applicable law or agreed to in writing,\n#         software distributed under the License is distributed on an\n#         "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#         KIND, either express or implied.  See the License for the\n#         specific language governing permissions and limitations\n#         under the License.\n-->\n\n|Android|iOS| Windows 8.1 Store | Windows 8.1 Phone | Windows 10 Store | Travis CI |\n|:-:|:-:|:-:|:-:|:-:|:-:|\n|[![Build Status](http://cordova-ci.cloudapp.net:8080/buildStatus/icon?job=cordova-periodic-build/PLATFORM=android,PLUGIN=cordova-plugin-media)](http://cordova-ci.cloudapp.net:8080/job/cordova-periodic-build/PLATFORM=android,PLUGIN=cordova-plugin-media/)|[![Build Status](http://cordova-ci.cloudapp.net:8080/buildStatus/icon?job=cordova-periodic-build/PLATFORM=ios,PLUGIN=cordova-plugin-media)](http://cordova-ci.cloudapp.net:8080/job/cordova-periodic-build/PLATFORM=ios,PLUGIN=cordova-plugin-media/)|[![Build Status](http://cordova-ci.cloudapp.net:8080/buildStatus/icon?job=cordova-periodic-build/PLATFORM=windows-8.1-store,PLUGIN=cordova-plugin-media)](http://cordova-ci.cloudapp.net:8080/job/cordova-periodic-build/PLATFORM=windows-8.1-store,PLUGIN=cordova-plugin-media/)|[![Build Status](http://cordova-ci.cloudapp.net:8080/buildStatus/icon?job=cordova-periodic-build/PLATFORM=windows-8.1-phone,PLUGIN=cordova-plugin-media)](http://cordova-ci.cloudapp.net:8080/job/cordova-periodic-build/PLATFORM=windows-8.1-phone,PLUGIN=cordova-plugin-media/)|[![Build Status](http://cordova-ci.cloudapp.net:8080/buildStatus/icon?job=cordova-periodic-build/PLATFORM=windows-10-store,PLUGIN=cordova-plugin-media)](http://cordova-ci.cloudapp.net:8080/job/cordova-periodic-build/PLATFORM=windows-10-store,PLUGIN=cordova-plugin-media/)|[![Build Status](https://travis-ci.org/apache/cordova-plugin-media.svg?branch=master)](https://travis-ci.org/apache/cordova-plugin-media)|\n\n# cordova-plugin-media\n\n\nThis plugin provides the ability to record and play back audio files on a device.\n\n__NOTE__: The current implementation does not adhere to a W3C\nspecification for media capture, and is provided for convenience only.\nA future implementation will adhere to the latest W3C specification\nand may deprecate the current APIs.\n\nThis plugin defines a global `Media` Constructor.\n\nAlthough in the global scope, it is not available until after the `deviceready` event.\n\n```js\ndocument.addEventListener("deviceready", onDeviceReady, false);\nfunction onDeviceReady() {\n    console.log(Media);\n}\n```\n\nReport issues with this plugin on the [Apache Cordova issue tracker](https://issues.apache.org/jira/issues/?jql=project%20%3D%20CB%20AND%20status%20in%20%28Open%2C%20%22In%20Progress%22%2C%20Reopened%29%20AND%20resolution%20%3D%20Unresolved%20AND%20component%20%3D%20%22Plugin%20Media%22%20ORDER%20BY%20priority%20DESC%2C%20summary%20ASC%2C%20updatedDate%20DESC)\n\n\n## Installation\n\n```bash\ncordova plugin add cordova-plugin-media\n```\n\n## Supported Platforms\n\n- Android\n- BlackBerry 10\n- iOS\n- Windows Phone 7 and 8\n- Tizen\n- Windows 8\n- Windows\n- Browser\n\n## Windows Phone Quirks\n\n- Only one media file can be played back at a time.\n\n## Media\n\n```js\nvar media = new Media(src, mediaSuccess, [mediaError], [mediaStatus]);\n```\n\n### Parameters\n\n- __src__: A URI containing the audio content. _(DOMString)_\n\n- __mediaSuccess__: (Optional) The callback that executes after a `Media` object has completed the current play, record, or stop action. _(Function)_\n\n- __mediaError__: (Optional) The callback that executes if an error occurs. _(Function)_\n\n- __mediaStatus__: (Optional) The callback that executes to indicate status changes. _(Function)_\n\n__NOTE__: `cdvfile` path is supported as `src` parameter:\n```javascript\nvar my_media = new Media(\'cdvfile://localhost/temporary/recording.mp3\', ...);\n```\n\n### Constants\n\nThe following constants are reported as the only parameter to the\n`mediaStatus` callback:\n\n- `Media.MEDIA_NONE`     = 0;\n- `Media.MEDIA_STARTING` = 1;\n- `Media.MEDIA_RUNNING`  = 2;\n- `Media.MEDIA_PAUSED`   = 3;\n- `Media.MEDIA_STOPPED`  = 4;\n\n### Methods\n\n- `media.getCurrentAmplitude`: Returns the current position within an audio file.\n\n- `media.getCurrentPosition`: Returns the current position within an audio file.\n\n- `media.getDuration`: Returns the duration of an audio file.\n\n- `media.play`: Start or resume playing an audio file.\n\n- `media.pause`: Pause playback of an audio file.\n\n- `media.pauseRecord`: Pause recording of an audio file.\n\n- `media.release`: Releases the underlying operating system\'s audio resources.\n\n- `media.resumeRecord`: Resume recording of an audio file.\n\n- `media.seekTo`: Moves the position within the audio file.\n\n- `media.setVolume`: Set the volume for audio playback.\n\n- `media.startRecord`: Start recording an audio file.\n\n- `media.stopRecord`: Stop recording an audio file.\n\n- `media.stop`: Stop playing an audio file.\n\n### Additional ReadOnly Parameters\n\n- __position__: The position within the audio playback, in seconds.\n    - Not automatically updated during play; call `getCurrentPosition` to update.\n\n- __duration__: The duration of the media, in seconds.\n\n\n## media.getCurrentAmplitude\n\nReturns the current amplitude of the current recording.\n\n    media.getCurrentAmplitude(mediaSuccess, [mediaError]);\n\n### Supported Platforms\n\n- Android\n- iOS\n\n### Parameters\n\n- __mediaSuccess__: The callback that is passed the current amplitude (0.0 - 1.0).\n\n- __mediaError__: (Optional) The callback to execute if an error occurs.\n\n### Quick Example\n\n```js\n// Audio player\n//\nvar my_media = new Media(src, onSuccess, onError);\n\n// Record audio\nmy_media.startRecord();\n\nmediaTimer = setInterval(function () {\n    // get media amplitude\n    my_media.getCurrentAmplitude(\n        // success callback\n        function (amp) {\n            console.log(amp + "%");\n        },\n        // error callback\n        function (e) {\n            console.log("Error getting amp=" + e);\n        }\n    );\n}, 1000);\n```\n\n## media.getCurrentPosition\n\nReturns the current position within an audio file.  Also updates the `Media` object\'s `position` parameter.\n\n    media.getCurrentPosition(mediaSuccess, [mediaError]);\n\n### Parameters\n\n- __mediaSuccess__: The callback that is passed the current position in seconds.\n\n- __mediaError__: (Optional) The callback to execute if an error occurs.\n\n### Quick Example\n\n```js\n// Audio player\n//\nvar my_media = new Media(src, onSuccess, onError);\n\n// Update media position every second\nvar mediaTimer = setInterval(function () {\n    // get media position\n    my_media.getCurrentPosition(\n        // success callback\n        function (position) {\n            if (position > -1) {\n                console.log((position) + " sec");\n            }\n        },\n        // error callback\n        function (e) {\n            console.log("Error getting pos=" + e);\n        }\n    );\n}, 1000);\n```\n\n## media.getDuration\n\nReturns the duration of an audio file in seconds. If the duration is unknown, it returns a value of -1.\n\n\n    media.getDuration();\n\n### Quick Example\n\n```js\n// Audio player\n//\nvar my_media = new Media(src, onSuccess, onError);\n\n// Get duration\nvar counter = 0;\nvar timerDur = setInterval(function() {\n    counter = counter + 100;\n    if (counter > 2000) {\n        clearInterval(timerDur);\n    }\n    var dur = my_media.getDuration();\n    if (dur > 0) {\n        clearInterval(timerDur);\n        document.getElementById(\'audio_duration\').innerHTML = (dur) + " sec";\n    }\n}, 100);\n```\n\n## media.pause\n\nPauses playing an audio file.\n\n    media.pause();\n\n\n### Quick Example\n\n```js\n// Play audio\n//\nfunction playAudio(url) {\n    // Play the audio file at url\n    var my_media = new Media(url,\n        // success callback\n        function () { console.log("playAudio():Audio Success"); },\n        // error callback\n        function (err) { console.log("playAudio():Audio Error: " + err); }\n    );\n\n    // Play audio\n    my_media.play();\n\n    // Pause after 10 seconds\n    setTimeout(function () {\n        my_media.pause();\n    }, 10000);\n}\n```\n\n## media.pauseRecord\n\nPauses recording an audio file.\n\n    media.pauseRecord();\n\n\n### Supported Platforms\n\n- iOS\n\n\n### Quick Example\n\n```js\n// Record audio\n//\nfunction recordAudio() {\n    var src = "myrecording.mp3";\n    var mediaRec = new Media(src,\n        // success callback\n        function() {\n            console.log("recordAudio():Audio Success");\n        },\n\n        // error callback\n        function(err) {\n            console.log("recordAudio():Audio Error: "+ err.code);\n        });\n\n    // Record audio\n    mediaRec.startRecord();\n\n    // Pause Recording after 5 seconds\n    setTimeout(function() {\n        my_media.pauseRecord();\n    }, 5000);\n}\n```\n\n## media.play\n\nStarts or resumes playing an audio file.\n\n```js\nmedia.play();\n```\n\n### Quick Example\n\n```js\n// Play audio\n//\nfunction playAudio(url) {\n    // Play the audio file at url\n    var my_media = new Media(url,\n        // success callback\n        function () {\n            console.log("playAudio():Audio Success");\n        },\n        // error callback\n        function (err) {\n            console.log("playAudio():Audio Error: " + err);\n        }\n    );\n    // Play audio\n    my_media.play();\n}\n```\n\n### iOS Quirks\n\n- __numberOfLoops__: Pass this option to the `play` method to specify\n  the number of times you want the media file to play, e.g.:\n\n        var myMedia = new Media("http://audio.ibeat.org/content/p1rj1s/p1rj1s_-_rockGuitar.mp3")\n        myMedia.play({ numberOfLoops: 2 })\n\n- __playAudioWhenScreenIsLocked__: Pass in this option to the `play`\n  method to specify whether you want to allow playback when the screen\n  is locked.  If set to `true` (the default value), the state of the\n  hardware mute button is ignored, e.g.:\n\n        var myMedia = new Media("http://audio.ibeat.org/content/p1rj1s/p1rj1s_-_rockGuitar.mp3")\n        myMedia.play({ playAudioWhenScreenIsLocked : false })\n\n- __order of file search__: When only a file name or simple path is\n  provided, iOS searches in the `www` directory for the file, then in\n  the application\'s `documents/tmp` directory:\n\n        var myMedia = new Media("audio/beer.mp3")\n        myMedia.play()  // first looks for file in www/audio/beer.mp3 then in <application>/documents/tmp/audio/beer.mp3\n\n## media.release\n\nReleases the underlying operating system\'s audio resources.\nThis is particularly important for Android, since there are a finite amount of\nOpenCore instances for media playback. Applications should call the `release`\nfunction for any `Media` resource that is no longer needed.\n\n    media.release();\n\n\n### Quick Example\n\n```js\n// Audio player\n//\nvar my_media = new Media(src, onSuccess, onError);\n\nmy_media.play();\nmy_media.stop();\nmy_media.release();\n```\n\n## media.resumeRecord\n\nResume recording an audio file.\n\n    media.resumeRecord();\n\n\n### Supported Platforms\n\n- iOS\n\n\n### Quick Example\n\n```js\n// Record audio\n//\nfunction recordAudio() {\n    var src = "myrecording.mp3";\n    var mediaRec = new Media(src,\n        // success callback\n        function() {\n            console.log("recordAudio():Audio Success");\n        },\n\n        // error callback\n        function(err) {\n            console.log("recordAudio():Audio Error: "+ err.code);\n        });\n\n    // Record audio\n    mediaRec.startRecord();\n\n    // Pause Recording after 5 seconds\n    setTimeout(function() {\n        my_media.pauseRecord();\n    }, 5000);\n\n    // Resume Recording after 10 seconds\n    setTimeout(function() {\n        my_media.resumeRecord();\n    }, 10000);\n}\n```\n\n## media.seekTo\n\nSets the current position within an audio file.\n\n    media.seekTo(milliseconds);\n\n### Parameters\n\n- __milliseconds__: The position to set the playback position within the audio, in milliseconds.\n\n\n### Quick Example\n\n```js\n// Audio player\n//\nvar my_media = new Media(src, onSuccess, onError);\n    my_media.play();\n// SeekTo to 10 seconds after 5 seconds\nsetTimeout(function() {\n    my_media.seekTo(10000);\n}, 5000);\n```\n\n### BlackBerry 10 Quirks\n\n- Not supported on BlackBerry OS 5 devices.\n\n## media.setVolume\n\nSet the volume for an audio file.\n\n    media.setVolume(volume);\n\n### Parameters\n\n- __volume__: The volume to set for playback.  The value must be within the range of 0.0 to 1.0.\n\n### Supported Platforms\n\n- Android\n- iOS\n\n### Quick Example\n\n```js\n// Play audio\n//\nfunction playAudio(url) {\n    // Play the audio file at url\n    var my_media = new Media(url,\n        // success callback\n        function() {\n            console.log("playAudio():Audio Success");\n        },\n        // error callback\n        function(err) {\n            console.log("playAudio():Audio Error: "+err);\n    });\n\n    // Play audio\n    my_media.play();\n\n    // Mute volume after 2 seconds\n    setTimeout(function() {\n        my_media.setVolume(\'0.0\');\n    }, 2000);\n\n    // Set volume to 1.0 after 5 seconds\n    setTimeout(function() {\n        my_media.setVolume(\'1.0\');\n    }, 5000);\n}\n```\n\n## media.startRecord\n\nStarts recording an audio file.\n\n    media.startRecord();\n\n### Supported Platforms\n\n- Android\n- iOS\n- Windows Phone 7 and 8\n- Windows\n\n### Quick Example\n\n```js\n// Record audio\n//\nfunction recordAudio() {\n    var src = "myrecording.mp3";\n    var mediaRec = new Media(src,\n        // success callback\n        function() {\n            console.log("recordAudio():Audio Success");\n        },\n\n        // error callback\n        function(err) {\n            console.log("recordAudio():Audio Error: "+ err.code);\n        });\n\n    // Record audio\n    mediaRec.startRecord();\n}\n```\n\n### Android Quirks\n\n- Android devices record audio in Adaptive Multi-Rate format. The specified file should end with a _.amr_ extension.\n- The hardware volume controls are wired up to the media volume while any Media objects are alive. Once the last created Media object has `release()` called on it, the volume controls revert to their default behaviour. The controls are also reset on page navigation, as this releases all Media objects.\n\n### iOS Quirks\n\n- iOS only records to files of type _.wav_ and returns an error if the file name extension is not correct.\n\n- If a full path is not provided, the recording is placed in the application\'s `documents/tmp` directory. This can be accessed via the `File` API using `LocalFileSystem.TEMPORARY`. Any subdirectory specified at record time must already exist.\n\n- Files can be recorded and played back using the documents URI:\n\n        var myMedia = new Media("documents://beer.mp3")\n\n### Windows Quirks\n\n- Windows devices can use MP3, M4A and WMA formats for recorded audio. However in most cases it is not possible to use MP3 for audio recording on _Windows Phone 8.1_ devices, because an MP3 encoder is [not shipped with Windows Phone](https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.mediaproperties.mediaencodingprofile.createmp3.aspx).\n\n- If a full path is not provided, the recording is placed in the `AppData/temp` directory. This can be accessed via the `File` API using `LocalFileSystem.TEMPORARY` or `ms-appdata:///temp/<filename>` URI.\n\n- Any subdirectory specified at record time must already exist.\n\n### Tizen Quirks\n\n- Not supported on Tizen devices.\n\n## media.stop\n\nStops playing an audio file.\n\n    media.stop();\n\n### Quick Example\n\n```js\n// Play audio\n//\nfunction playAudio(url) {\n    // Play the audio file at url\n    var my_media = new Media(url,\n        // success callback\n        function() {\n            console.log("playAudio():Audio Success");\n        },\n        // error callback\n        function(err) {\n            console.log("playAudio():Audio Error: "+err);\n        }\n    );\n\n    // Play audio\n    my_media.play();\n\n    // Pause after 10 seconds\n    setTimeout(function() {\n        my_media.stop();\n    }, 10000);\n}\n```\n\n## media.stopRecord\n\nStops recording an audio file.\n\n    media.stopRecord();\n\n### Supported Platforms\n\n- Android\n- iOS\n- Windows Phone 7 and 8\n- Windows\n\n### Quick Example\n\n```js\n// Record audio\n//\nfunction recordAudio() {\n    var src = "myrecording.mp3";\n    var mediaRec = new Media(src,\n        // success callback\n        function() {\n            console.log("recordAudio():Audio Success");\n        },\n\n        // error callback\n        function(err) {\n            console.log("recordAudio():Audio Error: "+ err.code);\n        }\n    );\n\n    // Record audio\n    mediaRec.startRecord();\n\n    // Stop recording after 10 seconds\n    setTimeout(function() {\n        mediaRec.stopRecord();\n    }, 10000);\n}\n```\n\n### Tizen Quirks\n\n- Not supported on Tizen devices.\n\n## MediaError\n\nA `MediaError` object is returned to the `mediaError` callback\nfunction when an error occurs.\n\n### Properties\n\n- __code__: One of the predefined error codes listed below.\n\n- __message__: An error message describing the details of the error.\n\n### Constants\n\n- `MediaError.MEDIA_ERR_ABORTED`        = 1\n- `MediaError.MEDIA_ERR_NETWORK`        = 2\n- `MediaError.MEDIA_ERR_DECODE`         = 3\n- `MediaError.MEDIA_ERR_NONE_SUPPORTED` = 4\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   _id: 'cordova-danding-media@1.0.0',
20 silly publish   _shasum: 'a10d168d5801923cad117b8413fe34c82fdd8d27',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name cordova-danding-media
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npm.taobao.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'cordova-danding-media',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'cordova-danding-media',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npm.taobao.org/cordova-danding-media
27 verbose publish registryBase https://registry.npm.taobao.org/
28 silly publish uploading /Users/danding/.npm/cordova-danding-media/1.0.0/package.tgz
29 verbose request uri https://registry.npm.taobao.org/cordova-danding-media
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 2:51:27 PM
32 verbose request id f9c00e6c39aa9bb5
33 http request PUT https://registry.npm.taobao.org/cordova-danding-media
34 http 403 https://registry.npm.taobao.org/cordova-danding-media
35 verbose headers { date: 'Sat, 31 Dec 2016 06:51:28 GMT',
35 verbose headers   'content-type': 'application/json; charset=utf-8',
35 verbose headers   'content-length': '87',
35 verbose headers   connection: 'keep-alive',
35 verbose headers   'x-current-requests': '1',
35 verbose headers   'x-readtime': '13' }
36 verbose request invalidating /Users/danding/.npm/registry.npm.taobao.org/cordova-danding-media on PUT
37 error publish Failed PUT 403
38 verbose stack Error: no_perms Private mode enable, only admin can publish this module: cordova-danding-media
38 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
38 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
38 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
38 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:199:22)
38 verbose stack     at emitTwo (events.js:87:13)
38 verbose stack     at Request.emit (events.js:172:7)
38 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1036:10)
38 verbose stack     at emitOne (events.js:82:20)
38 verbose stack     at Request.emit (events.js:169:7)
38 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:963:12)
39 verbose statusCode 403
40 verbose pkgid cordova-danding-media
41 verbose cwd /Users/danding/Documents/plugins/cordova-plugin-media
42 error Darwin 15.5.0
43 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
44 error node v4.4.4
45 error npm  v2.15.1
46 error code E403
47 error no_perms Private mode enable, only admin can publish this module: cordova-danding-media
48 error If you need help, you may report this error at:
48 error     <https://github.com/npm/npm/issues>
49 verbose exit [ 1, true ]
